-- ==================================================
-- DDL Master Script of Derby Database SUPERBOWL
-- Created by: Jürgen Röder
-- Last Updated: 2017-02-21
-- ==================================================
--SET AUTOCOMMIT OFF;

-- ==================================================
-- CREATE SCHEMA
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- The CREATE SCHEMA statement creates a schema, which is a way to logically
-- group objects in a single collection and to provide a unique namespace for objects.
-- The CREATE SCHEMA statement is subject to access control when the derby.database.sqlAuthorization
-- property is set to true for the database or system. Only the database owner can create a schema
-- with a name different from the current user name, and only the the database owner can specify
-- AUTHORIZATION userName
-- with a user name other than the current user name.
-- ==================================================
CREATE SCHEMA SUB AUTHORIZATION SBUser;
--CREATE SCHEMA AUTHORIZATION SBUser;

-- ==================================================
-- CREATE TABLE
-- ==================================================
CREATE TABLE SUB.AUDIT (
	 AUDIT_ID							BIGINT			NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,AUDIT_TIMESTAMP					TIMESTAMP		NOT NULL
	,AUDIT_USER							VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_TABLE						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_ACTION						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD01						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD02						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD03						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD04						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD05						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD06						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD07						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD08						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD09						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD10						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD11						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD12						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD13						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD14						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD15						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD16						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD17						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD18						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD19						VARCHAR(256)	NOT NULL DEFAULT ''
	,AUDIT_FIELD20						VARCHAR(256)	NOT NULL DEFAULT ''
	,CONSTRAINT AUDIT_PK PRIMARY KEY (AUDIT_ID)
);

-- ==================================================
-- Table: STATUS
-- ==================================================
CREATE TABLE SUB.STATUS (
	 STATUS_ID							BIGINT			NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,STATUS_VERSION						INTEGER			NOT NULL DEFAULT 0
	,STATUS_TEXT						VARCHAR(035)	NOT NULL DEFAULT ''
	,STATUS_COMMENT						VARCHAR(128)	NOT NULL DEFAULT ''
	,CONSTRAINT STATUS_PK PRIMARY KEY (STATUS_ID)
);

-- ==================================================
-- Table: GEOREGION
-- ==================================================
CREATE TABLE SUB.GEOREGION (
	 GEOREGION_ID						BIGINT			NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,GEOREGION_VERSION					INTEGER			NOT NULL DEFAULT 0
	,GEOREGION_ORDINAL					INTEGER			NOT NULL
	,GEOREGION_CODE						VARCHAR(010)	NOT NULL DEFAULT 'k.A.'
	,GEOREGION_NAME						VARCHAR(012)	NOT NULL DEFAULT 'k.A.'
	,GEOREGION_REGION					VARCHAR(035)	NOT NULL DEFAULT 'k.A.'
	,CONSTRAINT GEOREGION_PK PRIMARY KEY (GEOREGION_ID)
);
CREATE UNIQUE INDEX GEOREGION_ORDINAL_IDX ON SUB.GEOREGION (GEOREGION_ORDINAL);

-- ==================================================
-- Table: BOTANICSYSTEM
-- ==================================================
CREATE TABLE SUB.BOTANICSYSTEM (
	 BOTANICSYSTEM_ID					BIGINT			NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,BOTANICSYSTEM_VERSION				INTEGER			NOT NULL DEFAULT 0
	,BOTANICSYSTEM_ORDINAL				INTEGER			NOT NULL
	,BOTANICSYSTEM_ORDNUNG				VARCHAR(025)	NOT NULL DEFAULT ''
	,BOTANICSYSTEM_FAMILIE				VARCHAR(025)	NOT NULL DEFAULT ''
	,BOTANICSYSTEM_UNTERFAMILIE 		VARCHAR(025)	NOT NULL DEFAULT ''
	,CONSTRAINT BOTANICSYSTEM_PK PRIMARY KEY (BOTANICSYSTEM_ID)
);
CREATE UNIQUE INDEX BOTANICSYSTEM_ORDINAL_IDX ON SUB.BOTANICSYSTEM (BOTANICSYSTEM_ORDINAL);

-- ==================================================
-- Table: TIMBER
-- ==================================================
CREATE TABLE SUB.TIMBER (
	 TIMBER_ID							BIGINT			NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,TIMBER_VERSION						INTEGER			NOT NULL DEFAULT 0
	,TIMBER_GEOREGION_ID				BIGINT			NOT NULL
	,TIMBER_BOTANICSYSTEM_ID			BIGINT			NOT NULL
	,TIMBER_TYPE						CHAR(001)		NOT NULL DEFAULT ''
	,TIMBER_CODE						CHAR(004)		NOT NULL DEFAULT ''
	,TIMBER_NAME						VARCHAR(035)	NOT NULL DEFAULT ''
	,TIMBER_IMAGENAME					VARCHAR(035)	NOT NULL DEFAULT ''
	,TIMBER_AKADEMISCHERNAME			VARCHAR(050)	NOT NULL DEFAULT ''
	,TIMBER_ROHDICHTE					VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,TIMBER_ZUGFESTIGKEIT				VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,TIMBER_DRUCKFESTIGKEIT				VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,TIMBER_BIEGEFESTIGKEIT				VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,TIMBER_SCHERFESTIGKEIT				VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,TIMBER_BRINELL_HAERTE1				VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,TIMBER_BRINELL_HAERTE2				VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,TIMBER_TANGENTIALSCHWUND			VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,TIMBER_RADIALSCHWUND				VARCHAR(015)	NOT NULL DEFAULT 'k.A.'
	,CONSTRAINT TIMBER_PK PRIMARY KEY (TIMBER_ID)
	,CONSTRAINT TIMBER_BOTANICSYSTEM_FK FOREIGN KEY (TIMBER_BOTANICSYSTEM_ID) REFERENCES SUB.BOTANICSYSTEM(BOTANICSYSTEM_ID)
	,CONSTRAINT TIMBER_GEOREGION_FK FOREIGN KEY (TIMBER_GEOREGION_ID) REFERENCES SUB.GEOREGION(GEOREGION_ID)
);
CREATE INDEX TIMBER_GEOREGION_IDX ON SUB.TIMBER (TIMBER_GEOREGION_ID);

-- ==================================================
-- Table: ACTORROLE
-- ==================================================
CREATE TABLE SUB.ACTORROLE (
	 ACTORROLE_ID						BIGINT			NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,ACTORROLE_VERSION					INTEGER			NOT NULL DEFAULT 0
	,ACTORROLE_NAME						VARCHAR(015)	NOT NULL DEFAULT ''
	,ACTORROLE_COMMENT					VARCHAR(256)	NOT NULL DEFAULT ''
	,CONSTRAINT ACTORROLE_PK PRIMARY KEY (ACTORROLE_ID)
);

-- ==================================================
-- Table: ACTOR
-- ==================================================
CREATE TABLE SUB.ACTOR (
	 ACTOR_ID							BIGINT			NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,ACTOR_VERSION						INTEGER			NOT NULL DEFAULT 0
	,ACTOR_USERNAME						VARCHAR(010)	NOT NULL DEFAULT ''
	,ACTOR_PWD							VARCHAR(010)	NOT NULL DEFAULT ''
	,ACTOR_EMAIL						VARCHAR(035)	NOT NULL DEFAULT ''
	,ACTOR_GIVENNAME					VARCHAR(025)	NOT NULL DEFAULT ''
	,ACTOR_MIDDLENAME					VARCHAR(025)	NOT NULL DEFAULT ''
	,ACTOR_FAMILYNAME					VARCHAR(035)	NOT NULL DEFAULT ''
	,ACTOR_LOGINCOUNT					INTEGER			NOT NULL DEFAULT 0
	,ACTOR_LOGINFAILED					INTEGER			NOT NULL DEFAULT 0
	,ACTOR_LOCKED						BOOLEAN			NOT NULL DEFAULT FALSE
	,CONSTRAINT ACTOR_PK PRIMARY KEY (ACTOR_ID)
);

-- ==================================================
-- Table: ACTORIDENTITY
-- ==================================================
CREATE TABLE SUB.ACTORIDENTITY (
	 ROLE_ID							BIGINT			NOT NULL
	,ACTOR_ID							BIGINT			NOT NULL
	,CONSTRAINT ACTORIDENTITY_ACTORROLE_FK FOREIGN KEY (ROLE_ID) REFERENCES SUB.ACTORROLE(ACTORROLE_ID)
	,CONSTRAINT ACTORIDENTITY_ACTOR_FK FOREIGN KEY (ACTOR_ID) REFERENCES SUB.ACTOR(ACTOR_ID)
);
CREATE INDEX ACTORIDENTITY_ROLE_IDX ON SUB.ACTORIDENTITY (ROLE_ID);
CREATE INDEX ACTORIDENTITY_ACTOR_IDX ON SUB.ACTORIDENTITY (ACTOR_ID);

-- ==================================================
-- Table: ACTORSESSION
-- ==================================================
CREATE TABLE SUB.ACTORSESSION (
	 ACTORSESSION_ID					BIGINT			NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,ACTORSESSION_VERSION				INTEGER			NOT NULL DEFAULT 0
	,ACTORSESSION_ACTOR_ID				BIGINT			NOT NULL
	,ACTORSESSION_LOGIN					TIMESTAMP
	,ACTORSESSION_LOGOUT				TIMESTAMP
	,CONSTRAINT ACTORSESSION_PK PRIMARY KEY (ACTORSESSION_ID)
	,CONSTRAINT ACTORSESSION_ACTOR_FK FOREIGN KEY (ACTORSESSION_ACTOR_ID) REFERENCES SUB.ACTOR(ACTOR_ID)
);
CREATE INDEX ACTORSESSION_ACTOR_IDX ON SUB.ACTORSESSION (ACTORSESSION_ACTOR_ID);

-- ==================================================
-- Table: ARTEFACT
-- ==================================================
CREATE TABLE SUB.ARTEFACT (
	 ARTEFACT_ID						BIGINT				NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,ARTEFACT_VERSION					INTEGER				NOT NULL DEFAULT 0
	,ARTEFACT_ACTOR_ID					BIGINT				NOT NULL
	,ARTEFACT_STATUS_ID					BIGINT				NOT NULL
	,ARTEFACT_TIMBER_ID					BIGINT				NOT NULL
	,ARTEFACT_ORDINAL					INTEGER				NOT NULL
	,ARTEFACT_PRICE						DECIMAL(7,2)		NOT NULL DEFAULT 0
	,ARTEFACT_IMAGENAME					VARCHAR(064)		NOT NULL DEFAULT ''
	,ARTEFACT_ORIGIN					VARCHAR(256)		NOT NULL DEFAULT ''
	,ARTEFACT_COMMENT					VARCHAR(256)		NOT NULL DEFAULT ''
	,CONSTRAINT ARTEFACT_PK PRIMARY KEY (ARTEFACT_ID)
	,CONSTRAINT ARTEFACT_ACTOR_FK FOREIGN KEY (ARTEFACT_ACTOR_ID) REFERENCES SUB.ACTOR(ACTOR_ID)
	,CONSTRAINT ARTEFACT_STATUS_FK FOREIGN KEY (ARTEFACT_STATUS_ID) REFERENCES SUB.STATUS(STATUS_ID)
	,CONSTRAINT ARTEFACT_TIMBER_FK FOREIGN KEY (ARTEFACT_TIMBER_ID) REFERENCES SUB.TIMBER(TIMBER_ID)
);
CREATE UNIQUE INDEX ARTEFACT_PK ON SUB.ARTEFACT (ARTEFACT_ORDINAL);
CREATE INDEX ARTEFACT_ACTOR_IDX ON SUB.ARTEFACT (ARTEFACT_ACTOR_ID);
CREATE INDEX ARTEFACT_STATUS_IDX ON SUB.ARTEFACT (ARTEFACT_STATUS_ID);
CREATE INDEX ARTEFACT_TIMBER_IDX ON SUB.ARTEFACT (ARTEFACT_TIMBER_ID);

-- ==================================================
-- Table: MODSTEP
-- ==================================================
CREATE TABLE SUB.MODSTEP (
	 MODSTEP_ID							BIGINT				NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,MODSTEP_VERSION					INTEGER				NOT NULL DEFAULT 0
	,MODSTEP_NAME						VARCHAR(064)		NOT NULL DEFAULT ''
	,MODSTEP_COMMENT					VARCHAR(256)		NOT NULL DEFAULT ''
	,CONSTRAINT MODSTEP_PK PRIMARY KEY (MODSTEP_ID)
);

-- ==================================================
-- Table: MODIFICATION
-- ==================================================
CREATE TABLE SUB.MODIFICATION (
	 MODIFICATION_ID					BIGINT				NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,MODIFICATION_VERSION				INTEGER				NOT NULL DEFAULT 0
	,MODIFICATION_ARTEFACT_ID			BIGINT				NOT NULL
	,MODIFICATION_MODSTEP_ID			BIGINT				NOT NULL
	,MODIFICATION_DATE					DATE				NOT NULL
	,MODIFICATION_DIAMETER				DECIMAL(7,2)		NOT NULL DEFAULT 0
	,MODIFICATION_HEIGHT				DECIMAL(7,2)		NOT NULL DEFAULT 0
	,MODIFICATION_WALLTHICKNESS_MIN 	DECIMAL(7,2)		NOT NULL DEFAULT 0
	,MODIFICATION_WALLTHICKNESS_MAX 	DECIMAL(7,2)		NOT NULL DEFAULT 0
	,MODIFICATION_GRANULATION			INTEGER				NOT NULL DEFAULT 0
	,MODIFICATION_TAP					INTEGER				NOT NULL DEFAULT 0
	,MODIFICATION_RECESS				INTEGER				NOT NULL DEFAULT 0
	,MODIFICATION_SURFACE				VARCHAR(064)		NOT NULL DEFAULT ''
	,MODIFICATION_COMMENT				VARCHAR(256)		NOT NULL DEFAULT ''
	,CONSTRAINT MODIFICATION_PK PRIMARY KEY (MODIFICATION_ID)
	,CONSTRAINT MODIFICATION_ARTEFACT_FK FOREIGN KEY (MODIFICATION_ARTEFACT_ID) REFERENCES SUB.ARTEFACT(ARTEFACT_ID)
	,CONSTRAINT MODIFICATION_MODSTEP_FK FOREIGN KEY (MODIFICATION_MODSTEP_ID) REFERENCES SUB.MODSTEP(MODSTEP_ID)
);
CREATE INDEX MODIFICATION_ARTEFACT_IDX ON SUB.MODIFICATION (MODIFICATION_ARTEFACT_ID);
CREATE INDEX MODIFICATION_MODTSEP_IDX ON SUB.MODIFICATION (MODIFICATION_MODSTEP_ID);

-- ==================================================
-- Table: MODPROCESS
-- ==================================================
CREATE TABLE SUB.MODPROCESS (
	 MODPROCESS_ID						BIGINT				NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
	,MODPROCESS_VERSION					INTEGER				NOT NULL DEFAULT 0
	,MODPROCESS_MODIFICATION_ID			BIGINT				NOT NULL
	,MODPROCESS_DATE					DATE				NOT NULL DEFAULT ''
	,MODPROCESS_WEIGHT					DECIMAL(7,2)		NOT NULL DEFAULT 0
	,MODPROCESS_MOISTURE				DECIMAL(7,2)		NOT NULL DEFAULT 0
	,CONSTRAINT MODPROCESS_PK PRIMARY KEY (MODPROCESS_ID)
	,CONSTRAINT MODPROCESS_MODIFICATION_FK FOREIGN KEY (MODPROCESS_MODIFICATION_ID) REFERENCES SUB.MODIFICATION(MODIFICATION_ID)
);
CREATE INDEX MODPROCESS_MODIFICATION_IDX ON SUB.MODPROCESS (MODPROCESS_MODIFICATION_ID);

--COMMIT;
