/*==============================================================
DBMS    :  H2
Version :  1.4.x
Database:  superbowlDB
Created :  07.03.2017 00:00:00
==============================================================*/

/*==============================================================
Create Trigger
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Creates a new trigger. The trigger class must be public and implement
org.h2.api.Trigger. Inner classes are not supported. The class must be
available in the classpath of the database engine (when using the
server mode, it must be in the classpath of the server).
==============================================================*/
CREATE TRIGGER ARTEFACT_AFTER_INSERT_TRIGGER AFTER INSERT ON ARTEFACT FOR EACH ROW CALL "SBArtefactAfterInsertTrigger";
CREATE TRIGGER ARTEFACT_AFTER_UPDATE_TRIGGER BEFORE UPDATE ON ARTEFACT FOR EACH ROW CALL "SBArtefactBeforeUpdateTrigger";
CREATE TRIGGER ARTEFACT_AFTER_UPDATE_TRIGGER AFTER UPDATE ON ARTEFACT FOR EACH ROW CALL "SBArtefactAfterUpdateTrigger";
CREATE TRIGGER ARTEFACT_AFTER_DELETE_TRIGGER AFTER DELETE ON ARTEFACT FOR EACH ROW CALL "SBArtefactAfterDeleteTrigger";

CREATE TRIGGER BOTANICSYSTEM_AFTER_INSERT_TRIGGER AFTER INSERT ON BOTANICSYSTEM FOR EACH ROW CALL "SBBotanicSystemAfterInsertTrigger";
CREATE TRIGGER BOTANICSYSTEM_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON BOTANICSYSTEM FOR EACH ROW CALL "SBBotanicSystemBeforeUpdateTrigger";
CREATE TRIGGER BOTANICSYSTEM_AFTER_UPDATE_TRIGGER AFTER UPDATE ON BOTANICSYSTEM FOR EACH ROW CALL "SBBotanicSystemAfterUpdateTrigger";
CREATE TRIGGER BOTANICSYSTEM_AFTER_DELETE_TRIGGER AFTER DELETE ON BOTANICSYSTEM FOR EACH ROW CALL "SBBotanicSystemAfterDeleteTrigger";

CREATE TRIGGER GEOREGION_AFTER_INSERT_TRIGGER AFTER INSERT ON GEOREGION FOR EACH ROW CALL "SBGeoRegionAfterInsertTrigger";
CREATE TRIGGER GEOREGION_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON GEOREGION FOR EACH ROW CALL "SBGeoRegionBeforeUpdateTrigger";
CREATE TRIGGER GEOREGION_AFTER_UPDATE_TRIGGER AFTER UPDATE ON GEOREGION FOR EACH ROW CALL "SBGeoRegionAfterUpdateTrigger";
CREATE TRIGGER GEOREGION_AFTER_DELETE_TRIGGER AFTER DELETE ON GEOREGION FOR EACH ROW CALL "SBGeoRegionAfterDeleteTrigger";

CREATE TRIGGER ACTOR_AFTER_INSERT_TRIGGER AFTER INSERT ON ACTOR FOR EACH ROW CALL "SBActorAfterInsertTrigger";
CREATE TRIGGER ACTOR_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON ACTOR FOR EACH ROW CALL "SBActorBeforeUpdateTrigger";
CREATE TRIGGER ACTOR_AFTER_UPDATE_TRIGGER AFTER UPDATE ON ACTOR FOR EACH ROW CALL "SBActorAfterUpdateTrigger";
CREATE TRIGGER ACTOR_AFTER_DELETE_TRIGGER AFTER DELETE ON ACTOR FOR EACH ROW CALL "SBActorAfterDeleteTrigger";

CREATE TRIGGER ACTORROLE_AFTER_INSERT_TRIGGER AFTER INSERT ON ACTORROLE FOR EACH ROW CALL "SBActorRoleAfterInsertTrigger";
CREATE TRIGGER ACTORROLE_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON ACTORROLE FOR EACH ROW CALL "SBActorRoleBeforeUpdateTrigger";
CREATE TRIGGER ACTORROLE_AFTER_UPDATE_TRIGGER AFTER UPDATE ON ACTORROLE FOR EACH ROW CALL "SBActorRoleAfterUpdateTrigger";
CREATE TRIGGER ACTORROLE_AFTER_DELETE_TRIGGER AFTER DELETE ON ACTORROLE FOR EACH ROW CALL "SBActorRoleAfterDeleteTrigger";

CREATE TRIGGER ACTORSESSION_AFTER_INSERT_TRIGGER AFTER INSERT ON ACTORSESSION FOR EACH ROW CALL "SBActorSessionAfterInsertTrigger";
CREATE TRIGGER ACTORSESSION_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON ACTORSESSION FOR EACH ROW CALL "SBActorSessionBeforeUpdateTrigger";
CREATE TRIGGER ACTORSESSION_AFTER_UPDATE_TRIGGER AFTER UPDATE ON ACTORSESSION FOR EACH ROW CALL "SBActorSessionAfterUpdateTrigger";
CREATE TRIGGER ACTORSESSION_AFTER_DELETE_TRIGGER AFTER DELETE ON ACTORSESSION FOR EACH ROW CALL "SBActorSessionAfterDeleteTrigger";

CREATE TRIGGER ACTORIDENTITY_AFTER_INSERT_TRIGGER AFTER INSERT ON ACTORIDENTITY FOR EACH ROW CALL "SBActorIdentityAfterInsertTrigger";
CREATE TRIGGER ACTORIDENTITY_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON ACTORIDENTITY FOR EACH ROW CALL "SBActorIdentityBeforeUpdateTrigger";
CREATE TRIGGER ACTORIDENTITY_AFTER_UPDATE_TRIGGER AFTER UPDATE ON ACTORIDENTITY FOR EACH ROW CALL "SBActorIdentityAfterUpdateTrigger";
CREATE TRIGGER ACTORIDENTITY_AFTER_DELETE_TRIGGER AFTER DELETE ON ACTORIDENTITY FOR EACH ROW CALL "SBActorIdentityAfterDeleteTrigger";

CREATE TRIGGER STATUS_AFTER_INSERT_TRIGGER AFTER INSERT ON STATUS FOR EACH ROW CALL "SBStatusAfterInsertTrigger";
CREATE TRIGGER STATUS_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON STATUS FOR EACH ROW CALL "SBStatusBeforeUpdateTrigger";
CREATE TRIGGER STATUS_AFTER_UPDATE_TRIGGER AFTER UPDATE ON STATUS FOR EACH ROW CALL "SBStatusAfterUpdateTrigger";
CREATE TRIGGER STATUS_AFTER_DELETE_TRIGGER AFTER DELETE ON STATUS FOR EACH ROW CALL "SBStatusAfterDeleteTrigger";

CREATE TRIGGER TIMBER_AFTER_INSERT_TRIGGER AFTER INSERT ON TIMBER FOR EACH ROW CALL "SBTimberAfterInsertTrigger";
CREATE TRIGGER TIMBER_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON TIMBER FOR EACH ROW CALL "SBTimberBeforeUpdateTrigger";
CREATE TRIGGER TIMBER_AFTER_UPDATE_TRIGGER AFTER UPDATE ON TIMBER FOR EACH ROW CALL "SBTimberAfterUpdateTrigger";
CREATE TRIGGER TIMBER_AFTER_DELETE_TRIGGER AFTER DELETE ON TIMBER FOR EACH ROW CALL "SBTimberAfterDeleteTrigger";

CREATE TRIGGER MODIFICATION_AFTER_INSERT_TRIGGER AFTER INSERT ON MODIFICATION FOR EACH ROW CALL "SBModificationAfterInsertTrigger";
CREATE TRIGGER MODIFICATION_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON MODIFICATION FOR EACH ROW CALL "SBModificationBeforeUpdateTrigger";
CREATE TRIGGER MODIFICATION_AFTER_UPDATE_TRIGGER AFTER UPDATE ON MODIFICATION FOR EACH ROW CALL "SBModificationAfterUpdateTrigger";
CREATE TRIGGER MODIFICATION_AFTER_DELETE_TRIGGER AFTER DELETE ON MODIFICATION FOR EACH ROW CALL "SBModificationAfterDeleteTrigger";

CREATE TRIGGER MODSTEP_AFTER_INSERT_TRIGGER AFTER INSERT ON MODSTEP FOR EACH ROW CALL "SBModStepAfterInsertTrigger";
CREATE TRIGGER MODSTEP_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON MODSTEP FOR EACH ROW CALL "SBModStepBeforeUpdateTrigger";
CREATE TRIGGER MODSTEP_AFTER_UPDATE_TRIGGER AFTER UPDATE ON MODSTEP FOR EACH ROW CALL "SBModStepAfterUpdateTrigger";
CREATE TRIGGER MODSTEP_AFTER_DELETE_TRIGGER AFTER DELETE ON MODSTEP FOR EACH ROW CALL "SBModStepAfterDeleteTrigger";

CREATE TRIGGER MODPROCESS_AFTER_INSERT_TRIGGER AFTER INSERT ON MODPROCESS FOR EACH ROW CALL "SBModProcessAfterInsertTrigger";
CREATE TRIGGER MODPROCESS_BEFORE_UPDATE_TRIGGER BEFORE UPDATE ON MODPROCESS FOR EACH ROW CALL "SBModProcessBeforeUpdateTrigger";
CREATE TRIGGER MODPROCESS_AFTER_UPDATE_TRIGGER AFTER UPDATE ON MODPROCESS FOR EACH ROW CALL "SBModProcessAfterUpdateTrigger";
CREATE TRIGGER MODPROCESS_AFTER_DELETE_TRIGGER AFTER DELETE ON MODPROCESS FOR EACH ROW CALL "SBModProcessAfterDeleteTrigger";

commit;


