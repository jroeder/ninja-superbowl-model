/*==============================================================
DBMS    :  H2
Version :  1.0.x
Database:  superbowlDB_h2
Created :  03.03.2015 00:00:00
==============================================================*/

/*==============================================================
Drop all indices
==============================================================*/
drop index fox_snpy_list_index if exists;
drop index fox_avgs_list_index if exists;
drop index fox_cbrbs_list_index if exists;
drop index fox_dscbs_list_index if exists;
drop index fox_esec_symbol_index if exists;
drop index fox_grwb_list_index if exists;
drop index fox_grmd_list_index if exists;
drop index fox_esech_hist_index if exists;
drop index fox_rbcl_list_index if exists;
drop index fox_seps_list_index if exists;
drop index fox_dvdc_bk_index if exists;
drop index fox_eqvc_bk_index if exists;
drop index fox_dvdch_hist_index if exists;
drop index fox_dvcdh_hist_index if exists;
drop index fox_eqvch_hist_index if exists;
drop index fox_eqvch_hist_index if exists;
drop index fox_bgrp_code_index if exists;
drop index fox_fgrp_name_index if exists;
drop index fox_fgrp_login_index if exists;
drop index fox_pcxth_hist_index if exists;
drop index fox_mcfg_bk_index if exists;
drop index fox_pcxt_bk_index if exists;
drop index fox_imps_bk_index if exists;
drop index fox_undl_bk_index if exists;
drop index fox_apcf_key_index if exists;
drop index fox_fxtvd_fxtv_list_index if exists;
drop index fox_fxtvd_fxtvh_list_index if exists;
drop index fox_mopa_bk_index if exists;

/*==============================================================
Drop all tables
==============================================================*/
drop table end_of_day_price if exists;
drop table snapshot_context if exists;
drop table snapshot_holiday_calendar if exists;
drop table snapshot_dividend_curve if exists;
drop table snapshot_equity_vol_curve if exists;
drop table snapshot_yield_curve if exists;
drop table snapshot_crossrate if exists;
drop table snapshot_tick if exists;
drop table snapshot_portfolio if exists;
drop table snapshot_holding if exists;
drop table snapshot_data if exists;
drop table holiday_calendar_detail if exists;
drop table h_holiday_calendar if exists;
drop table holiday_calendar if exists;
drop table h_interest_security if exists;
drop table interest_security if exists;
drop table h_fx_security if exists;
drop table fx_security if exists;
drop table simple_equity_payoff_sched if exists;
drop table averaging_schedule if exists;
drop table average_correlation_override if exists;
drop table grbw_mutation_vector if exists;
drop table grbw_monitoring_date if exists;
drop table grbw_conversion if exists;
drop table grbw_barrier if exists;
drop table api_combo_constituent if exists;
drop table dsc_barrier_schedule if exists;
drop table cbr_barrier_schedule if exists;
drop table basket_extension if exists;
drop table basket_constituent if exists;
drop table rainbow_control if exists;
drop table h_equity_security if exists;
drop table equity_security if exists;
drop table fx_termvol_detail if exists;
drop table h_fx_termvol if exists;
drop table fx_termvol if exists;
drop table dividend_curve_detail if exists;
drop table h_dividend_curve if exists;
drop table dividend_curve if exists;
drop table equity_vol_curve_detail if exists;
drop table h_equity_vol_curve if exists;
drop table equity_vol_curve if exists;
drop table h_user_detail if exists;
drop table user_detail if exists;
drop table functional_group_right if exists;
drop table h_functional_group if exists;
drop table functional_group if exists;
drop table business_group_right if exists;
drop table h_business_group if exists;
drop table business_group if exists;
drop table snapshot_trigger if exists;
drop table pricing_context_property if exists;
drop table h_pricing_context if exists;
drop table model_config_property if exists;
drop table h_model_config if exists;
drop table pricing_context if exists;
drop table model_config if exists;
drop table model_parameter if exists;
drop table h_underlying_data if exists;
drop table underlying_data if exists;
drop table h_portfolio if exists;
drop table portfolio if exists;
drop table h_symbol_mapping if exists;
drop table symbol_mapping if exists;
drop table h_currency if exists;
drop table currency if exists;
drop table h_application_config if exists;
drop table application_config if exists;

commit;

/*==============================================================
Table: holiday_calendar
==============================================================*/
create table holiday_calendar (
     hoca_id                        bigint           generated by default as identity (start with 1, increment by 1)
    ,hoca_version                   bigint           not null
    ,hoca_name                      varchar(11)      not null
    ,hoca_created_at                timestamp        not null
    ,hoca_created_by                varchar(20)      not null
    ,constraint fox_hoca_pk primary key (hoca_id)
);

/*==============================================================
Table: h_holiday_calendar
==============================================================*/
create table h_holiday_calendar (
     hocah_id                       bigint           generated by default as identity (start with 1, increment by 1)
    ,hocah_origin_hoca_id           bigint           not null
    ,hocah_origin_hoca_version      bigint           not null
    ,hocah_name                     varchar(11)      not null
    ,hocah_created_at               timestamp        not null
    ,hocah_created_by               varchar(20)      not null
    ,constraint fox_hocah_pk primary key (hocah_id)
    ,constraint fox_hocah_hoca_id_fk foreign key (hocah_origin_hoca_id) references holiday_calendar (hoca_id)
);

/*==============================================================
Table: holiday_calendar_detail
==============================================================*/
create table holiday_calendar_detail (
     hocd_id                        bigint           generated by default as identity (start with 1, increment by 1)
    ,hocd_parent_hoca_id            numeric(10,0)    null
    ,hocd_parent_hocah_id           numeric(10,0)    null
    ,hocd_date                      date             not null
    ,hocd_comment                   varchar(50)      not null
    ,constraint fox_hocd_pk primary key (hocd_id)
    ,constraint fox_hocd_hoca_id_fk foreign key (hocd_parent_hoca_id) references holiday_calendar (hoca_id)
    ,constraint fox_hocd_hocah_id_fk foreign key (hocd_parent_hocah_id) references h_holiday_calendar (hocah_id)
);

/*==============================================================
Table: application_config
==============================================================*/
create table application_config (
     apcf_id                        bigint           generated by default as identity (start with 1, increment by 1)
    ,apcf_version                   bigint           not null
    ,apcf_category                  varchar(15)      not null
    ,apcf_key                       varchar(60)      not null
    ,apcf_value                     varchar(1800)    not null
    ,apcf_created_at                timestamp        not null
    ,apcf_created_by                varchar(20)      not null
    ,constraint fox_apcf_pk         primary key      (apcf_id)
    ,constraint fox_apcf_key_index  unique           (apcf_key)
);

/*==============================================================
Table: h_application_config
==============================================================*/
create table h_application_config (
     apcfh_id                        bigint          generated by default as identity (start with 1, increment by 1)
    ,apcfh_origin_apcf_id            bigint              null
    ,apcfh_origin_apcf_version       bigint          not null
    ,apcfh_category                  varchar(15)     not null
    ,apcfh_key                       varchar(60)     not null
    ,apcfh_value                     varchar(1800)   not null
    ,apcfh_created_at                timestamp       not null
    ,apcfh_created_by                varchar(20)     not null
    ,constraint fox_apcfh_pk         primary key     (apcfh_id)
    ,constraint fox_apcfh_apcf_id_fk foreign key     (apcfh_origin_apcf_id) references application_config (apcf_id)
);

/*==============================================================
Table: currency
==============================================================*/
create table currency (
     curr_id                         bigint          generated by default as identity (start with 1, increment by 1)
    ,curr_version                    bigint          not null
    ,curr_region                     varchar(10)     not null
    ,curr_name                       varchar(50)     not null
    ,curr_iso_code_alpha             varchar(03)     not null
    ,curr_iso_code_numeric           int             not null
    ,curr_major_unit_name            varchar(12)     not null
    ,curr_minor_unit_name            varchar(12)     not null
    ,curr_description                varchar(100)    not null
    ,curr_created_at                 timestamp       not null
    ,curr_created_by                 varchar(20)     not null
    ,constraint fox_curr_pk            primary key   (curr_id)
    ,constraint fox_curr_isocode_index unique        (curr_iso_code_alpha)
);

/*==============================================================
Table: h_currency
==============================================================*/
create table h_currency (
     currh_id                        bigint           generated by default as identity (start with 1, increment by 1)
    ,currh_origin_curr_id            bigint               null
    ,currh_origin_curr_version       bigint           not null
    ,currh_region                    varchar(10)      not null
    ,currh_name                      varchar(50)      not null
    ,currh_iso_code_alpha            varchar(03)      not null
    ,currh_iso_code_numeric          int              not null
    ,currh_major_unit_name           varchar(12)      not null
    ,currh_minor_unit_name           varchar(12)      not null
    ,currh_description               varchar(100)     not null
    ,currh_created_at                timestamp        not null
    ,currh_created_by                varchar(20)      not null
    ,constraint fox_currh_pk         primary key      (currh_id)
    ,constraint fox_currh_curr_id_fk foreign key      (currh_origin_curr_id) references currency (curr_id)
);

/*==============================================================
Table: symbol_mapping
==============================================================*/
create table symbol_mapping (
      symm_id                        bigint           generated by default as identity (start with 1, increment by 1)
     ,symm_version                   bigint           not null
     ,symm_used_by                   varchar(12)      not null
     ,symm_type                      varchar(20)      not null
     ,symm_description               varchar(50)      not null
     ,symm_system_source             varchar(10)      not null
     ,symm_symbol_source             varchar(20)      not null
     ,symm_system_target             varchar(10)      not null
     ,symm_symbol_target             varchar(20)      not null
     ,symm_created_at                timestamp        not null
     ,symm_created_by                varchar(20)      not null
     ,constraint fox_symm_pk         primary key (symm_id)
);

/*==============================================================
Table: h_symbol_mapping
==============================================================*/
create table h_symbol_mapping (
      symmh_id                        bigint           generated by default as identity (start with 1, increment by 1)
     ,symmh_origin_symm_id            bigint               null
     ,symmh_origin_symm_version       bigint           not null
     ,symmh_used_by                   varchar(12)      not null
     ,symmh_type                      varchar(20)      not null
     ,symmh_description               varchar(50)      not null
     ,symmh_system_source             varchar(10)      not null
     ,symmh_symbol_source             varchar(20)      not null
     ,symmh_system_target             varchar(10)      not null
     ,symmh_symbol_target             varchar(20)      not null
     ,symmh_created_at                timestamp        not null
     ,symmh_created_by                varchar(20)      not null
     ,constraint fox_symmh_pk         primary key (symmh_id)
     ,constraint fox_symmh_symm_id_fk foreign key (symmh_origin_symm_id) references symbol_mapping (symm_id)
);

/*==============================================================
Table: portfolio
==============================================================*/
create table portfolio (
     imps_id                        bigint            generated by default as identity (start with 1, increment by 1)
    ,imps_version                   bigint            not null
    ,imps_waehrung_curr_id          bigint                null
    ,imps_name                      varchar(24)       not null
    ,imps_server_id                 integer           not null
    ,imps_is_active                 boolean           not null
    ,imps_created_at                timestamp         not null
    ,imps_created_by                varchar(20)       not null
    ,constraint fox_imps_pk         primary key       (imps_id)
    ,constraint fox_imps_bk_idx     unique            (imps_name)
    ,constraint fox_imps_curr_id_fk foreign key       (imps_waehrung_curr_id) references currency (curr_id)
);

/*==============================================================
Table: h_portfolio
==============================================================*/
create table h_portfolio (
     impsh_id                        bigint            generated by default as identity (start with 1, increment by 1)
    ,impsh_origin_imps_id            bigint                null
    ,impsh_origin_imps_version       bigint            not null
    ,impsh_waehrung_currh_id         bigint            not null
    ,impsh_name                      varchar(24)       not null
    ,impsh_server_id                 integer           not null
    ,impsh_is_active                 boolean           not null
    ,impsh_created_at                timestamp         not null
    ,impsh_created_by                varchar(20)       not null
    ,constraint fox_impsh_pk          primary key       (impsh_id)
    ,constraint fox_impsh_imps_id_fk  foreign key       (impsh_origin_imps_id) references portfolio (imps_id)
    ,constraint fox_impsh_currh_id_fk foreign key       (impsh_waehrung_currh_id) references h_currency (currh_id)
);

/*==============================================================
Table: underlying_data
==============================================================*/
create table underlying_data (
     undl_id                        bigint            generated by default as identity (start with 1, increment by 1)
    ,undl_version                   bigint            not null
    ,undl_name                      varchar(30)       not null
    ,undl_created_at                timestamp         not null
    ,undl_created_by                varchar(20)       not null
    ,constraint fox_undl_pk         primary key       (undl_id)
    ,constraint fox_undl_bk_index   unique            (undl_name)
);

/*==============================================================
Table: h_underlying_data
==============================================================*/
create table h_underlying_data (
     undlh_id                        bigint            generated by default as identity (start with 1, increment by 1)
    ,undlh_origin_undl_id            bigint                null
    ,undlh_origin_undl_version       bigint            not null
    ,undlh_name                      varchar(20)       not null
    ,undlh_created_at                timestamp         not null
    ,undlh_created_by                varchar(20)       not null
    ,constraint fox_undlh_pk         primary key       (undlh_id)
    ,constraint fox_undlh_undl_id_fk foreign key       (undlh_origin_undl_id) references underlying_data (undl_id)
);

/*==============================================================
Table: business_group
==============================================================*/
create table business_group (
     bgrp_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,bgrp_version                     bigint            not null
    ,bgrp_code                        varchar(10)       not null
    ,bgrp_name                        varchar(100)      not null
    ,bgrp_created_at                  timestamp         not null
    ,bgrp_created_by                  varchar(20)       not null
    ,constraint fox_bgrp_pk           primary key (bgrp_id)
    ,constraint fox_bgrp_code_index   unique (bgrp_code)
);

/*==============================================================
Table: h_business_group
==============================================================*/
create table h_business_group (
     bgrph_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,bgrph_origin_bgrp_id             bigint                null
    ,bgrph_origin_bgrp_version        bigint            not null
    ,bgrph_code                       varchar(10)       not null
    ,bgrph_name                       varchar(100)      not null
    ,bgrph_created_at                 timestamp         not null
    ,bgrph_created_by                 varchar(20)       not null
    ,constraint fox_bgrph_pk          primary key (bgrph_id)
    ,constraint fox_bgrph_bgrp_id_fk  foreign key (bgrph_origin_bgrp_id) references business_group (bgrp_id)
);

/*==============================================================
Table: business_group_right
==============================================================*/
create table business_group_right (
     bgrt_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,bgrt_issuer_bgrp_id              bigint                null
    ,bgrt_receiver_bgrp_id            bigint                null
    ,bgrt_issuer_bgrph_id             bigint                null
    ,bgrt_receiver_bgrph_id           bigint                null
    ,bgrt_access                      char(1)           not null
    ,bgrt_created_at                  timestamp         not null
    ,bgrt_created_by                  varchar(20)       not null
    ,constraint fox_bgpy_pk                     primary key (bgrt_id)
    ,constraint fox_bgrt_issuer_bgrp_id_fk      foreign key (bgrt_issuer_bgrp_id) references business_group (bgrp_id)
    ,constraint fox_bgrt_receiver_bgrp_id_fk    foreign key (bgrt_receiver_bgrp_id) references business_group (bgrp_id)
    ,constraint fox_bgrt_issuer_bgrph_id_fk     foreign key (bgrt_issuer_bgrph_id) references h_business_group (bgrph_id)
    ,constraint fox_bgrt_receiver_bgrph_id_fk   foreign key (bgrt_receiver_bgrph_id) references h_business_group (bgrph_id)
);

/*==============================================================
Table: model_parameter
==============================================================*/
create table model_parameter (
     mopa_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,mopa_name                        varchar(100)      not null
    ,mopa_type                        integer           not null
    ,mopa_description                 varchar(500)      not null
    ,mopa_object_context              varchar(20)       not null
    ,mopa_lower_limit_type            integer           not null
    ,mopa_lower_limit_value           double precision      null
    ,mopa_upper_limit_type            integer           not null
    ,mopa_upper_limit_value           double precision      null
    ,mopa_created_at                  timestamp         not null
    ,mopa_created_by                  varchar(20)       not null
    ,constraint fox_mopa_pk primary key (mopa_id)
);

/*==============================================================
Index: fox_mopa_bk
==============================================================*/
create unique index fox_mopa_bk_index on model_parameter (
mopa_name ASC,
mopa_object_context ASC
);

/*==============================================================
Table: model_config
==============================================================*/
create table model_config (
     mcfg_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,mcfg_businessgroup_bgrp_id       bigint            not null
    ,mcfg_version                     bigint            not null
    ,mcfg_name                        varchar(30)       not null
    ,mcfg_created_at                  timestamp         not null
    ,mcfg_created_by                  varchar(20)       not null
    ,constraint fox_mcfg_pk           primary key (mcfg_id)
    ,constraint fox_mcfg_bgrp_id_fk   foreign key (mcfg_businessgroup_bgrp_id) references business_group (bgrp_id)
    ,constraint fox_mcfg_bk_index     unique      (mcfg_name)
);

/*==============================================================
Table: h_model_config
==============================================================*/
create table h_model_config (
     mcfgh_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,mcfgh_origin_mcfg_id             bigint                null
    ,mcfgh_origin_mcfg_version        bigint            not null
    ,mcfgh_businessgroup_bgrph_id     bigint            not null
    ,mcfgh_name                       varchar(30)       not null
    ,mcfgh_created_at                 timestamp         not null
    ,mcfgh_created_by                 varchar(20)       not null
    ,constraint fox_pcxth_pk          primary key (mcfgh_id)
    ,constraint fox_mcfgh_mcfg_id_fk  foreign key (mcfgh_origin_mcfg_id) references model_config (mcfg_id)
    ,constraint fox_mcfgh_bgrph_id_fk foreign key (mcfgh_businessgroup_bgrph_id) references h_business_group (bgrph_id)
);

/*==============================================================
Table: model_config_property
==============================================================*/
create table model_config_property (
     mcpy_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,mcpy_parent_mcfg_id              bigint                null
    ,mcpy_parent_mcfgh_id             bigint                null
    ,mcpy_parameter_mopa_id           bigint            not null
    ,mcpy_value                       varchar(1800)     not null
    ,constraint fox_mcpy_pk           primary key (mcpy_id)
    ,constraint fox_mcpy_mcfg_id_fk   foreign key (mcpy_parent_mcfg_id) references model_config (mcfg_id)
    ,constraint fox_mcpy_mcfgh_id_fk  foreign key (mcpy_parent_mcfgh_id) references h_model_config (mcfgh_id)
    ,constraint fox_mcpy_mopa_id_fk   foreign key (mcpy_parameter_mopa_id) references model_parameter (mopa_id)
);

/*==============================================================
Table: pricing_context
==============================================================*/
create table pricing_context (
     pcxt_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,pcxt_version                     bigint            not null
    ,pcxt_modelconfig_mcfg_id         bigint            not null
    ,pcxt_businessgroup_bgrp_id       bigint            not null
    ,pcxt_name                        varchar(30)       not null
    ,pcxt_pricing_daily_type          char(01)          not null
    ,pcxt_created_at                  timestamp         not null
    ,pcxt_created_by                  varchar(20)       not null
    ,constraint fox_pcxt_pk           primary key (pcxt_id)
    ,constraint fox_pcxt_mcfg_id_fk   foreign key (pcxt_modelconfig_mcfg_id) references model_config (mcfg_id)
    ,constraint fox_pcxt_bgrp_id_fk   foreign key (pcxt_businessgroup_bgrp_id) references business_group (bgrp_id)
    ,constraint fox_pcxt_bk_index     unique      (pcxt_name)
);

/*==============================================================
Table: h_pricing_context
==============================================================*/
create table h_pricing_context (
     pcxth_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,pcxth_origin_pcxt_id             bigint                null
    ,pcxth_origin_pcxt_version        bigint            not null
    ,pcxth_modelconfig_mcfgh_id       bigint            not null
    ,pcxth_businessgroup_bgrph_id     bigint            not null
    ,pcxth_name                       varchar(30)       not null
    ,pcxth_pricing_daily_type         char(01)          not null
    ,pcxth_created_at                 timestamp         not null
    ,pcxth_created_by                 varchar(20)       not null
    ,constraint fox_pcxth_pk          primary key (pcxth_id)
    ,constraint fox_pcxth_pcxt_id_fk  foreign key (pcxth_origin_pcxt_id) references pricing_context (pcxt_id)
    ,constraint fox_pcxth_mcfgh_id_fk foreign key (pcxth_modelconfig_mcfgh_id) references h_model_config (mcfgh_id)
    ,constraint fox_pcxth_bgrph_id_fk foreign key (pcxth_businessgroup_bgrph_id) references h_business_group (bgrph_id)
);

/*==============================================================*/
/* Index: fox_pcxth_hist_idx                                    */
/*==============================================================*/
create unique index fox_pcxth_hist_idx on h_pricing_context (
pcxth_origin_pcxt_id ASC,
pcxth_origin_pcxt_version ASC
);

/*==============================================================
Table: pricing_context_property
==============================================================*/
create table pricing_context_property (
     pcpy_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,pcpy_pricingcontext_pcxt_id      bigint                null
    ,pcpy_pricingcontext_pcxth_id     bigint                null
    ,pcpy_key                         varchar(60)       not null
    ,pcpy_value                       varchar(1800)     not null
    ,pcpy_type                        varchar(100)      not null
    ,constraint fox_pcpy_pk           primary key (pcpy_id)
    ,constraint fox_pcpy_pcxt_id_fk   foreign key (pcpy_pricingcontext_pcxt_id) references pricing_context (pcxt_id)
    ,constraint fox_pcpy_pcxth_id_fk  foreign key (pcpy_pricingcontext_pcxth_id) references h_pricing_context (pcxth_id)
);

/*==============================================================
Table: snapshot_trigger
==============================================================*/
create table snapshot_trigger (
     snpr_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,snpr_pricingcontext_pcxt_id      bigint                null
    ,snpr_pricingcontext_pcxth_id     bigint            not null
    ,snpr_active                      boolean           not null
    ,snpr_status                      char(1)           not null
    ,snpr_pattern                     varchar(100)      not null
    ,snpr_created_at                  timestamp         not null
    ,snpr_created_by                  varchar(20)       not null
    ,constraint fox_snpr_pk           primary key (snpr_id)
    ,constraint fox_snpr_pcxt_id_fk   foreign key (snpr_pricingcontext_pcxt_id) references pricing_context (pcxt_id)
    ,constraint fox_snpr_pcxth_id_fk  foreign key (snpr_pricingcontext_pcxth_id) references h_pricing_context (pcxth_id)
);

/*==============================================================
Table: functional_group
==============================================================*/
create table functional_group (
     fgrp_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,fgrp_version                     bigint            not null
    ,fgrp_name                        varchar(100)      not null
    ,fgrp_created_at                  timestamp         not null
    ,fgrp_created_by                  varchar(20)       not null
    ,constraint fox_fgrp_pk           primary key (fgrp_id)
    ,constraint fox_fgrp_name_index   unique      (fgrp_name)
);

/*==============================================================
Table: h_functional_group
==============================================================*/
create table h_functional_group (
     fgrph_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,fgrph_origin_fgrp_id             bigint                null
    ,fgrph_origin_fgrp_version        bigint            not null
    ,fgrph_name                       varchar(100)      not null
    ,fgrph_created_at                 timestamp         not null
    ,fgrph_created_by                 varchar(20)       not null
    ,constraint fox_fgrph_pk          primary key (fgrph_id)
    ,constraint fox_fgrph_fgrp_id_fk  foreign key (fgrph_origin_fgrp_id) references functional_group (fgrp_id)
);

/*==============================================================
Table: functional_group_right
==============================================================*/
create table functional_group_right (
     fgrt_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,fgrt_functiongroup_fgrp_id       bigint                null
    ,fgrt_functiongroup_fgrph_id      bigint            not null
    ,fgrt_type                        varchar(20)       not null
    ,fgrt_access                      char(1)           not null
    ,fgrt_created_at                  timestamp         not null
    ,fgrt_created_by                  varchar(20)       not null
    ,constraint fox_fgrt_pk           primary key (fgrt_id)
    ,constraint fox_fgrp_fgrt_id_fk   foreign key (fgrt_functiongroup_fgrp_id) references functional_group (fgrp_id)
    ,constraint fox_fgrt_fgrph_id_fk  foreign key (fgrt_functiongroup_fgrph_id) references h_functional_group (fgrph_id)
);

/*==============================================================
Table: user_detail
==============================================================*/
create table user_detail (
     usrd_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,usrd_version                     bigint            not null
    ,usrd_functiongroup_fgrp_id       bigint            not null
    ,usrd_businessgroup_bgrp_id       bigint            not null
    ,usrd_login                       varchar(10)       not null
    ,usrd_long_name                   varchar(50)       not null
    ,usrd_password                    varchar(255)      not null
    ,usrd_created_at                  timestamp         not null
    ,usrd_created_by                  varchar(20)       not null
    ,constraint fox_usrd_pk           primary key (usrd_id)
    ,constraint fox_usrd_fgrp_id_fk   foreign key (usrd_functiongroup_fgrp_id) references functional_group (fgrp_id)
    ,constraint fox_usrd_bgrp_id_fk   foreign key (usrd_businessgroup_bgrp_id) references business_group (bgrp_id)
    ,constraint fox_fgrp_login_index  unique      (usrd_login)
);

/*==============================================================
Table: h_user_detail
==============================================================*/
create table h_user_detail (
     usrdh_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,usrdh_origin_usrd_id             bigint                null
    ,usrdh_origin_usrd_version        bigint            not null
    ,usrdh_functiongroup_fgrph_id     bigint            not null
    ,usrdh_businessgroup_bgrph_id     bigint            not null
    ,usrdh_login                      varchar(10)       not null
    ,usrdh_long_name                  varchar(100)      not null
    ,usrdh_password                   varchar(255)      not null
    ,usrdh_created_at                 timestamp         not null
    ,usrdh_created_by                 varchar(20)       not null
    ,constraint fox_usrdh_pk          primary key (usrdh_id)
    ,constraint fox_usrdh_usrd_id_fk  foreign key (usrdh_origin_usrd_id) references user_detail (usrd_id)
    ,constraint fox_usrdh_fgrph_id_fk foreign key (usrdh_functiongroup_fgrph_id) references h_functional_group (fgrph_id)
    ,constraint fox_usrdh_bgrph_id_fk foreign key (usrdh_businessgroup_bgrph_id) references h_business_group (bgrph_id)
);

/*==============================================================
Table: dividend_curve
==============================================================*/
create table dividend_curve (
     dvdc_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,dvdc_version                     bigint            not null
    ,dvdc_waehrung_curr_id            bigint            not null
    ,dvdc_businessgroup_bgrp_id       bigint            not null
    ,dvdc_identifier                  varchar(30)       not null
    ,dvdc_creation_timestamp          timestamp         not null
    ,dvdc_import_timestamp            timestamp         not null
    ,dvdc_created_at                  timestamp         not null
    ,dvdc_created_by                  varchar(20)       not null
    ,constraint fox_dvdc_pk           primary key (dvdc_id)
    ,constraint fox_dvdc_curr_id_fk   foreign key (dvdc_waehrung_curr_id) references currency (curr_id)
    ,constraint fox_dvdc_bgrp_id_fk   foreign key (dvdc_businessgroup_bgrp_id) references business_group (bgrp_id)
);

/*==============================================================
Table: h_dividend_curve
==============================================================*/
create table h_dividend_curve (
     dvdch_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,dvdch_origin_dvdc_id             bigint                null
    ,dvdch_origin_dvdc_version        bigint            not null
    ,dvdch_waehrung_currh_id          bigint            not null
    ,dvdch_businessgroup_bgrph_id     bigint            not null
    ,dvdch_identifier                 varchar(30)       not null
    ,dvdch_creation_timestamp         timestamp         not null
    ,dvdch_import_timestamp           timestamp         not null
    ,dvdch_created_at                 timestamp         not null
    ,dvdch_created_by                 varchar(20)       not null
    ,constraint fox_dvdch_pk          primary key (dvdch_id)
    ,constraint fox_dvdch_currh_id_fk foreign key (dvdch_waehrung_currh_id) references h_currency (currh_id)
    ,constraint fox_dvdch_dvdc_id_fk  foreign key (dvdch_origin_dvdc_id) references dividend_curve (dvdc_id)
    ,constraint fox_dvdch_bgrph_id_fk foreign key (dvdch_businessgroup_bgrph_id) references h_business_group (bgrph_id)
);

/*==============================================================
Table: dividend_curve_detail
==============================================================*/
create table dividend_curve_detail (
     dvcd_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,dvcd_parent_dvdc_id              bigint                null
    ,dvcd_parent_dvdch_id             bigint                null
    ,dvcd_point_description           varchar(20)       not null
    ,dvcd_amount                      decimal(10,2)     not null
    ,dvcd_exday                       timestamp         not null
    ,dvcd_paydate                     timestamp         not null
    ,dvcd_list_index                  int                   null
    ,constraint fox_dvcd_pk           primary key (dvcd_id)
    ,constraint fox_dvcd_dvdc_id_fk   foreign key (dvcd_parent_dvdc_id) references dividend_curve (dvdc_id)
    ,constraint fox_dvcd_dvdch_id_fk  foreign key (dvcd_parent_dvdch_id) references h_dividend_curve (dvdch_id)
);

create index if not exists fox_dvcd_dvdc_list_index on dividend_curve_detail (
dvcd_parent_dvdc_id asc,
dvcd_list_index asc
);

create index if not exists fox_dvcd_dvdch_list_index on dividend_curve_detail (
dvcd_parent_dvdch_id asc,
dvcd_list_index asc
);

/*==============================================================
Table: equity_vol_curve
==============================================================*/
create table equity_vol_curve (
     eqvc_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,eqvc_version                     bigint            not null
    ,eqvc_businessgroup_bgrp_id       bigint            not null
    ,eqvc_identifier                  varchar(30)       not null
    ,eqvc_underlying_spot_orc         decimal(10,2)     not null
    ,eqvc_underlying_spot_modorc      decimal(10,2)     not null
    ,eqvc_creation_timestamp          timestamp         not null
    ,eqvc_import_timestamp            timestamp         not null
    ,eqvc_created_at                  timestamp         not null
    ,eqvc_created_by                  varchar(20)       not null
    ,constraint fox_eqvc_pk           primary key       (eqvc_id)
    ,constraint fox_eqvc_bgrp_id_fk   foreign key (eqvc_businessgroup_bgrp_id) references business_group (bgrp_id)
);

/*==============================================================
Table: h_equity_vol_curve
==============================================================*/
create table h_equity_vol_curve (
     eqvch_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,eqvch_origin_eqvc_id             bigint                null
    ,eqvch_origin_eqvc_version        bigint            not null
    ,eqvch_businessgroup_bgrph_id     bigint            not null
    ,eqvch_identifier                 varchar(30)       not null
    ,eqvch_underlying_spot_orc        decimal(10,2)     not null
    ,eqvch_underlying_spot_modorc     decimal(10,2)     not null
    ,eqvch_creation_timestamp         timestamp         not null
    ,eqvch_import_timestamp           timestamp         not null
    ,eqvch_created_at                 timestamp         not null
    ,eqvch_created_by                 varchar(20)       not null
    ,constraint fox_eqvch_pk          primary key (eqvch_id)
    ,constraint fox_eqvch_eqvc_id_fk  foreign key (eqvch_origin_eqvc_id) references equity_vol_curve (eqvc_id)
    ,constraint fox_eqvch_bgrph_id_fk foreign key (eqvch_businessgroup_bgrph_id) references h_business_group (bgrph_id)
);

/*==============================================================
Table: equity_vol_curve_detail
==============================================================*/
create table equity_vol_curve_detail (
     evcd_id                        bigint            generated by default as identity (start with 1, increment by 1)
    ,evcd_parent_eqvc_id            bigint                null
    ,evcd_parent_eqvch_id           bigint                null
    ,evcd_expiry                    timestamp         not null
    ,evcd_orc_ref_forward           decimal(10,2)     not null
    ,evcd_orc_ref_volatility        decimal(10,2)     not null
    ,evcd_orc_slope                 decimal(10,2)     not null
    ,evcd_orc_put_curvature         decimal(10,2)     not null
    ,evcd_orc_call_curvature        decimal(10,2)     not null
    ,evcd_orc_down_cut              decimal(10,2)     not null
    ,evcd_orc_up_cut                decimal(10,2)     not null
    ,evcd_modorc_ref_forward        decimal(10,2)         null
    ,evcd_modorc_ref_volatility     decimal(10,2)         null
    ,evcd_modorc_slope              decimal(10,2)         null
    ,evcd_modorc_put_curvature      decimal(10,2)         null
    ,evcd_modorc_call_curvature     decimal(10,2)         null
    ,evcd_modorc_down_cut           decimal(10,2)         null
    ,evcd_modorc_up_cut             decimal(10,2)         null
    ,evcd_modorc_dcrv               decimal(10,2)         null
    ,evcd_modorc_ucrv               decimal(10,2)         null
    ,evcd_ignore_for_modorc         boolean           not null
    ,evcd_list_index                int                   null
    ,constraint fox_evcd_pk         primary key       (evcd_id)
    ,constraint fox_evcd_eqvc_id_fk foreign key       (evcd_parent_eqvc_id) references equity_vol_curve (eqvc_id)
    ,constraint fox_evcd_eqvch_id_fk foreign key      (evcd_parent_eqvch_id) references h_equity_vol_curve (eqvch_id)
);

create index if not exists fox_evcd_eqvc_list_index on equity_vol_curve_detail (
evcd_parent_eqvc_id asc,
evcd_list_index asc
);

create index if not exists fox_evcd_eqvch_list_index on equity_vol_curve_detail (
evcd_parent_eqvch_id asc,
evcd_list_index asc
);

/*==============================================================
Table: fx_termvol
==============================================================*/
create table fx_termvol (
     fxtv_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,fxtv_version                     bigint            not null
    ,fxtv_businessgroup_bgrp_id       bigint            not null
    ,fxtv_name                        varchar(30)       not null
    ,fxtv_creation_timestamp          timestamp         not null
    ,fxtv_import_timestamp            timestamp         not null
    ,fxtv_created_at                  timestamp         not null
    ,fxtv_created_by                  varchar(20)       not null
    ,constraint fox_fxtv_pk           primary key (fxtv_id)
    ,constraint fox_fxtv_bgrp_id_fk   foreign key (fxtv_businessgroup_bgrp_id) references business_group (bgrp_id)
);

/*==============================================================
Table: h_fx_termvol
==============================================================*/
create table h_fx_termvol (
     fxtvh_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,fxtvh_origin_fxtv_id             bigint                null
    ,fxtvh_origin_fxtv_version        bigint            not null
    ,fxtvh_businessgroup_bgrph_id     bigint            not null
    ,fxtvh_name                       varchar(30)       not null
    ,fxtvh_creation_timestamp         timestamp         not null
    ,fxtvh_import_timestamp           timestamp         not null
    ,fxtvh_created_at                 timestamp         not null
    ,fxtvh_created_by                 varchar(20)       not null
    ,constraint fox_fxtvh_pk                 primary key (fxtvh_id)
    ,constraint fox_fxtvh_origin_fxtv_id_fk  foreign key (fxtvh_origin_fxtv_id) references fx_termvol (fxtv_id)
    ,constraint fox_fxtvh_bgrph_id_fk        foreign key (fxtvh_businessgroup_bgrph_id) references h_business_group (bgrph_id)
);

/*==============================================================
Table: fx_termvol_detail
==============================================================*/
create table fx_termvol_detail (
     fxtvd_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,fxtvd_parent_fxtv_id             bigint                null
    ,fxtvd_parent_fxtvh_id            bigint                null
    ,fxtvd_termvol_days               integer           not null
    ,fxtvd_termvol_value              double precision  not null
    ,fxtvd_list_index                 int                   null
    ,constraint fox_fxtvd_pk                 primary key (fxtvd_id)
    ,constraint fox_fxtvd_parent_fxtv_id_fk  foreign key (fxtvd_parent_fxtv_id) references fx_termvol (fxtv_id)
    ,constraint fox_fxtvd_parent_fxtvh_id_fk foreign key (fxtvd_parent_fxtvh_id) references h_fx_termvol (fxtvh_id)
);

/*==============================================================*/
/* Index: fox_fxtvd_fxtv_list_index                             */
/*==============================================================*/
create index fox_fxtvd_fxtv_list_index on fx_termvol_detail (
fxtvd_parent_fxtv_id asc,
fxtvd_list_index asc
);

/*==============================================================*/
/* Index: fox_fxtvd_fxtvh_list_index                            */
/*==============================================================*/
create index fox_fxtvd_fxtvh_list_index on fx_termvol_detail (
fxtvd_parent_fxtvh_id asc,
fxtvd_list_index asc
);

/*==============================================================
Table: fx_security
==============================================================*/
create table fx_security (
     fsec_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,fsec_version                     bigint            not null
    ,fsec_type                        varchar(03)       not null
    ,fsec_created_by                  timestamp         not null
    ,fsec_created_at                  varchar(20)       not null
    ,constraint fox_fsec_pk           primary key (fsec_id)
);

/*==============================================================
Table: h_fx_security
==============================================================*/
create table h_fx_security (
     fsech_id                     bigint            generated by default as identity (start with 1, increment by 1)
    ,fsech_origin_fsec_id         bigint                null
    ,fsech_origin_fsec_version    bigint            not null
    ,fsech_type                   varchar(03)       not null
    ,fsec_created_at              timestamp         not null
    ,fsec_created_by              varchar(20)       not null
    ,constraint fox_fsech_pk primary key (fsech_id)
    ,constraint fox_fsech_fsec_id_fk foreign key (fsech_origin_fsec_id) references fx_security (fsec_id)
);

/*==============================================================
Table: interest_security
==============================================================*/
create table interest_security (
     isec_id                      bigint            generated by default as identity (start with 1, increment by 1)
    ,isec_version                 bigint            not null
    ,isec_type                    varchar(03)       not null
    ,isec_created_at              timestamp         not null
    ,isec_created_by              varchar(20)       not null
    ,constraint fox_isec_pk primary key (isec_id)
);

/*==============================================================
Table: h_interest_security
==============================================================*/
create table h_interest_security (
     isech_id                     bigint            generated by default as identity (start with 1, increment by 1)
    ,isech_origin_isec_id         bigint                null
    ,isech_origin_isec_version    bigint            not null
    ,isech_type                   varchar(03)       not null
    ,isech_created_at             timestamp         not null
    ,isech_created_by             varchar(20)       not null
    ,constraint fox_isech_pk primary key (isech_id)
    ,constraint fox_isech_isec_id_fk foreign key (isech_origin_isec_id) references interest_security (isec_id)
);

/*==============================================================
Table: equity_security
==============================================================*/
create table equity_security (
     esec_id                      bigint                generated by default as identity (start with 1, increment by 1)
    ,esec_version                 bigint                not null
    ,esec_underlying_esec_id      bigint                    null
    ,esec_type                    varchar(04)           not null
    ,esec_long_name               varchar(51)               null
    ,esec_symbol                  varchar(23)           not null
    ,esec_or_symbol               varchar(23)               null
    ,esec_currency_iso_code       char(03)              not null
    ,esec_cusip                   char(06)                  null
    ,esec_isin                    char(12)                  null
    ,esec_timezone_id             varchar(10)               null
    ,esec_expiry_date             date                      null
    ,esec_expiry_time             time                      null
    ,esec_expiry_timezone         varchar(10)               null
    ,esec_payoff_type             varchar(03)               null
    ,esec_strike                  double precision          null
    ,esec_quanto_curr_strike      double precision          null
    ,esec_option_type             char(01)                  null
    ,esec_option_style            char(01)                  null
    ,esec_ex_settle_days          integer                   null
    ,esec_ex_settle_type          varchar(20)               null
    ,esec_contract_size           double precision          null
    ,esec_market_symbol           varchar(20)               null
    ,esec_is_forward              boolean   default false   not null
    ,esec_forward_end             date                      null
    ,esec_forward_end_time        time                      null
    ,esec_forward_notional        double precision          null
    ,esec_is_performance_basket   boolean   default false   not null
    ,esec_is_var_stock_quant_mode boolean   default false   not null
    ,esec_issuer                  varchar(10)               null
    ,esec_averaging_type          varchar(03)               null
    ,esec_share_ratio             double precision          null
    ,esec_conversion_type         varchar(03)               null
    ,esec_trading_days_per_year   integer                   null
    ,esec_barrier_level           double precision          null
    ,esec_rebate                  double precision          null
    ,esec_strike2                 double precision          null
    ,esec_trd_settle_days         integer                   null
    ,esec_trd_settle_type         varchar(20)               null
    ,esec_coupon                  double precision          null
    ,esec_payment_freq            char(1)                   null
    ,esec_coupon_type             char(3)                   null
    ,esec_day_convention          varchar(07)               null
    ,esec_issue_date              fox_date                  null
    ,esec_first_coupon_date       fox_date                  null
    ,esec_last_coupon_date        fox_date                  null
    ,esec_pricing_method          char(3)                   null
    ,esec_redemption_value        double precision          null
    ,esec_created_at              timestamp             not null
    ,esec_created_by              varchar(20)           not null
    ,constraint fox_esec_pk              primary key (esec_id)
    ,constraint fox_esec_undl_esec_id_fk foreign key (esec_underlying_esec_id) references equity_security (esec_id)
    ,constraint fox_esec_symbol_index    unique (esec_symbol)
);

/*==============================================================
Table: h_equity_security
==============================================================*/
create table h_equity_security (
     esech_id                         bigint                generated by default as identity (start with 1, increment by 1)
    ,esech_type                       varchar(04)           not null
    ,esech_origin_esec_id             bigint                    null
    ,esech_origin_esec_version        bigint                not null
    ,esech_underlying_esech_symbol    varchar(23)               null
    ,esech_long_name                  varchar(51)               null
    ,esech_symbol                     varchar(23)           not null
    ,esech_or_symbol                  varchar(23)               null
    ,esech_currency_iso_code          char(03)              not null
    ,esech_cusip                      char(06)                  null
    ,esech_isin                       char(12)                  null
    ,esech_timezone_id                varchar(10)               null
    ,esech_expiry_date                date                      null
    ,esech_expiry_time                time                      null
    ,esech_expiry_timezone            varchar(10)               null
    ,esech_payoff_type                varchar(03)               null
    ,esech_strike                     double precision          null
    ,esech_quanto_curr_strike         double precision          null
    ,esech_option_type                char(01)                  null
    ,esech_option_style               char(01)                  null
    ,esech_ex_settle_days             integer                   null
    ,esech_ex_settle_type             varchar(20)               null
    ,esech_contract_size              double precision          null
    ,esech_market_symbol              varchar(20)               null
    ,esech_is_forward                 boolean   default false   not null
    ,esech_forward_end                date                      null
    ,esech_forward_end_time           time                      null
    ,esech_forward_notional           double precision          null
    ,esech_is_performance_basket      boolean   default false   not null
    ,esech_is_var_stock_quant_mode    boolean   default false   not null
    ,esech_issuer                     varchar(10)               null
    ,esech_averaging_type             varchar(03)               null
    ,esech_share_ratio                double precision          null
    ,esech_conversion_type            varchar(03)               null
    ,esech_trading_days_per_year      integer                   null
    ,esech_barrier_level              double precision          null
    ,esech_rebate                     double precision          null
    ,esech_strike2                    double precision          null
    ,esech_trd_settle_days            integer                   null
    ,esech_trd_settle_type            varchar(20)               null
    ,esech_coupon                     double precision          null
    ,esech_payment_freq               char(1)                   null
    ,esech_coupon_type                char(3)                   null
    ,esech_day_convention             varchar(07)               null
    ,esech_issue_date                 fox_date                  null
    ,esech_first_coupon_date          fox_date                  null
    ,esech_last_coupon_date           fox_date                  null
    ,esech_pricing_method             char(3)                   null
    ,esech_redemption_value           double precision          null
    ,esech_created_at                 timestamp             not null
    ,esech_created_by                 varchar(20)           not null
    ,constraint fox_esech_pk          primary key (esech_id)
    ,constraint fox_esech_esec_id_fk  foreign key (esech_origin_esec_id) references equity_security (esec_id)
    ,constraint fox_esech_hist_index  unique (esech_origin_esec_version, esech_symbol)
);

/*==============================================================
Table: rainbow_control
==============================================================*/
create table rainbow_control (
     rbcl_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,rbcl_parent_esec_id              bigint                    null
    ,rbcl_parent_esech_id             bigint                    null
    ,rbcl_weight                      double precision      not null
    ,rbcl_cap                         double precision      not null
    ,rbcl_is_cap_used                 bit                   not null
    ,rbcl_floor                       double precision      not null
    ,rbcl_is_floor_used               bit                   not null
    ,rbcl_adjustment_d                double precision      not null
    ,rbcl_adjustment_k                double precision      not null
    ,rbcl_list_index                  integer   default 0       null
    ,constraint fox_rbcl_pk           primary key (rbcl_id)
    ,constraint fox_rbcl_esec_id_fk   foreign key (rbcl_parent_esec_id) references equity_security (esec_id)
    ,constraint fox_rbcl_esech_id_fk  foreign key (rbcl_parent_esech_id) references h_equity_security (esech_id)
);

create index fox_rbcl_esec_list_idx on rainbow_control (
rbcl_parent_esec_id,
rbcl_list_index
);

create index fox_rbcl_esech_list_index on rainbow_control (
rbcl_parent_esech_id,
rbcl_list_index
);

/*==============================================================
Table: cbr_barrier_schedule
==============================================================*/
create table cbr_barrier_schedule (
     cbrbs_id                         bigint                generated by default as identity (start with 1, increment by 1)
    ,cbrbs_parent_esec_id             bigint                    null
    ,cbrbs_parent_esech_id            bigint                    null
    ,cbrbs_barrier_level              double precision      not null
    ,cbrbs_start_date                 date                  not null
    ,cbrbs_start_time                 time                  not null
    ,cbrbs_end_date                   date                  not null
    ,cbrbs_end_time                   time                  not null
    ,cbrbs_barrier_type               char(01)              not null
    ,cbrbs_strike                     double precision      not null
    ,cbrbs_conversion_type            varchar(03)           not null
    ,cbrbs_list_index                 integer   default 0       null
    ,constraint fox_cbrbs_pk          primary key (cbrbs_id)
    ,constraint fox_cbrbs_esec_id_pk  foreign key (cbrbs_parent_esec_id) references equity_security (esec_id)
    ,constraint fox_cbrbs_esech_id_fk foreign key (cbrbs_parent_esech_id) references h_equity_security (esech_id)
);

create index if not exists fox_cbrbs_esec_list_index on cbr_barrier_schedule (
cbrbs_parent_esec_id,
cbrbs_list_index
);

create index if not exists fox_cbrbs_esech_list_index on cbr_barrier_schedule (
cbrbs_parent_esech_id,
cbrbs_list_index
);

/*==============================================================
Table: dsc_barrier_schedule
==============================================================*/
create table dsc_barrier_schedule (
     dscbs_id                         bigint                generated by default as identity (start with 1, increment by 1)
    ,dscbs_parent_esec_id             bigint                    null
    ,dscbs_parent_esech_id            bigint                    null
    ,dscbs_type                       char(01)              not null
    ,dscbs_down_barrier               double precision      not null
    ,dscbs_down_rebate                double precision      not null
    ,dscbs_down_rebate_type           varchar(03)           not null
    ,dscbs_up_barrier                 double precision      not null
    ,dscbs_up_rebate                  double precision      not null
    ,dscbs_up_rebate_type             varchar(03)           not null
    ,dscbs_coupon                     double precision      not null
    ,dscbs_monitoring_date            date                  not null
    ,dscbs_monitoring_time            time                  not null
    ,dscbs_list_index                 integer   default 0       null
    ,constraint fox_bsch_pk           primary key (dscbs_id)
    ,constraint fox_dscbs_esec_id_fk  foreign key (dscbs_parent_esec_id) references equity_security (esec_id)
    ,constraint fox_dscbs_esech_id_fk foreign key (dscbs_parent_esech_id) references h_equity_security (esech_id)
);

create index if not exists fox_dscbs_esec_list_index on dsc_barrier_schedule (
dscbs_parent_esec_id,
dscbs_list_index
);

create index if not exists fox_dscbs_esech_list_index on dsc_barrier_schedule (
dscbs_parent_esech_id,
dscbs_list_index
);

/*==============================================================
Table: api_combo_constituent
==============================================================*/
create table api_combo_constituent (
     acon_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,acon_type                        varchar(04)           not null
    ,acon_parent_esec_id              bigint                    null
    ,acon_constituent_esec_id         bigint                    null
    ,acon_parent_esech_id             bigint                    null
    ,acon_constituent_esech_symbol    varchar(23)               null
    ,acon_ratio                       double precision      not null
    ,acon_begin_date                  date                  not null
    ,acon_end_date                    date                  not null
    ,constraint fox_acon_pk                    primary key (acon_id)
    ,constraint fox_acon_const_esec_id_fk      foreign key (acon_constituent_esec_id) references equity_security (esec_id)
    ,constraint fox_acon_combo_esec_id_fk      foreign key (acon_parent_esec_id) references equity_security (esec_id)
    ,constraint fox_acon_const_esech_symbol_fk foreign key (acon_constituent_esech_symbol) references h_equity_security (esech_underlying_esech_symbol)
    ,constraint fox_acon_combo_esech_id_fk     foreign key (acon_parent_esech_id) references h_equity_security (esech_id)
);

/*==============================================================
Table: average_correlation_override
==============================================================*/
create table average_correlation_override (
     acor_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,acor_parent_esec_id              bigint                    null
    ,acor_parent_esech_id             bigint                    null
    ,acor_group_identifier            varchar(06)           not null
    ,acor_avg_corr_value              double precision      not null
    ,constraint fox_acor_pk           primary key (acor_id)
    ,constraint fox_acor_esec_id_fk   foreign key (acor_parent_esec_id) references equity_security (esec_id)
    ,constraint fox_acor_esech_id_fk  foreign key (acor_parent_esech_id) references h_equity_security (esech_id)
);

/*==============================================================
Table: grbw_barrier
==============================================================*/
create table grbw_barrier (
     grwb_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,grwb_parent_esec_id              bigint                    null
    ,grwb_parent_esech_id             bigint                    null
    ,grwb_barrier_rank                integer               not null
    ,grwb_barrier_status              bit                   not null
    ,grwb_barrier_type                varchar(03)           not null
    ,grwb_lower_bound                 double precision      not null
    ,grwb_upper_bound                 double precision      not null
    ,grwb_open_upper_bound            bit                   not null
    ,grwb_barrier_strike              double precision      not null
    ,grwb_start_date                  date                  not null
    ,grwb_start_time                  time                  not null
    ,grwb_end_date                    date                  not null
    ,grwb_end_time                    time                  not null
    ,grwb_pay_date                    date                  not null
    ,grwb_pay_time                    time                  not null
    ,grwb_daily_monitoring            bit                   not null
    ,grwb_list_index                  integer   default 0       null
    ,constraint fox_grwb_pk           primary key (grwb_id)
    ,constraint fox_grwb_esec_id_fk   foreign key (grwb_parent_esec_id) references equity_security (esec_id)
    ,constraint fox_grwb_esech_id_fk  foreign key (grwb_parent_esech_id) references h_equity_security (esech_id)
);

create index if not exists fox_grwb_esec_list_index on grbw_barrier (
grwb_parent_esec_id,
grwb_list_index
);

create index if not exists fox_grwb_esech_list_index on grbw_barrier (
grwb_parent_esech_id,
grwb_list_index
);

/*==============================================================
Table: grbw_conversion
==============================================================*/
create table grbw_conversion (
     grwc_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,grwc_grwb_id                     bigint                not null
    ,grwc_conversion_type             varchar(03)           not null
    ,constraint fox_grwc_pk           primary key (grwc_id)
    ,constraint fox_grwc_grwb_id_fk   foreign key (grwc_grwb_id) references grbw_barrier (grwb_id)
);

/*==============================================================
Table: grbw_monitoring_date
==============================================================*/
create table grbw_monitoring_date (
     grmd_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,grmd_grwb_id                     bigint                not null
    ,grmd_monitoring_date             date                  not null
    ,grmd_list_index                  integer                   null
    ,constraint fox_grmd_pk           primary key (grmd_id)
    ,constraint fox_grmd_grwb_id_fk   foreign key (grmd_grwb_id) references grbw_barrier (grwb_id)
);

create index if not exists fox_grmd_grwb_list_index on grbw_monitoring_date (
grmd_grwb_id ,
grmd_list_index
);

/*==============================================================
Table: grbw_mutation_vector
==============================================================*/
create table grbw_mutation_vector (
     grmv_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,grmv_grwb_id                     bigint                not null
    ,grmv_barrier_rank                integer               not null
    ,grmv_active                      bit                   not null
    ,constraint fox_grmv_pk           primary key (grmv_id)
    ,constraint fox_grmv_grwb_id_fk   foreign key (grmv_grwb_id)    references grbw_barrier (grwb_id)
);

/*==============================================================
Table: averaging_schedule
==============================================================*/
create table averaging_schedule (
     avgs_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,avgs_parent_esec_id              bigint                    null
    ,avgs_parent_esech_id             bigint                    null
    ,avgs_symbol                      varchar(30)           not null
    ,avgs_schedule_date               date                  not null
    ,avgs_avg_corr_value              double precision      not null
    ,avgs_list_index                  integer   default 0       null
    ,constraint fox_avgs_pk           primary key (avgs_id)
    ,constraint fox_avgs_esec_id_fk   foreign key (avgs_parent_esec_id) references equity_security (esec_id)
    ,constraint fox_avgs_esech_id_fk  foreign key (avgs_parent_esech_id) references h_equity_security (esech_id)
);

create index if not exists fox_avgs_esec_list_index on averaging_schedule (
avgs_parent_esec_id,
avgs_list_index
);

create index if not exists fox_avgs_esech_list_index on averaging_schedule (
avgs_parent_esech_id,
avgs_list_index
);

/*==============================================================
Table: basket_constituent
==============================================================*/
create table basket_constituent (
     bcon_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,bcon_type                        varchar(04)           not null
    ,bcon_parent_esec_id              bigint                    null
    ,bcon_constituent_esec_id         bigint                    null
    ,bcon_parent_esech_id             bigint                    null
    ,bcon_constituent_esech_symbol    varchar(23)               null
    ,bcon_ratio                       double precision      not null
    ,bcon_xrate                       double precision      not null
    ,constraint fox_bcon_pk                    primary key (bcon_id)
    ,constraint fox_bcon_const_esech_symbol_fk foreign key (bcon_constituent_esech_symbol) references h_equity_security (esech_underlying_esech_symbol)
    ,constraint fox_bcon_basket_esech_id_fk    foreign key (bcon_parent_esech_id) references h_equity_security (esech_id)
    ,constraint fox_bcon_const_esec_id_fk      foreign key (bcon_constituent_esec_id) references equity_security (esec_id)
    ,constraint fox_bcon_basket_esec_id_fk     foreign key (bcon_parent_esec_id) references equity_security (esec_id)
);

/*==============================================================
Table: basket_extension
==============================================================*/
create table basket_extension (
     bext_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,bext_parent_esec_id              bigint                    null
    ,bext_parent_esech_id             bigint                    null
    ,bext_symbol                      varchar(30)           not null
    ,bext_cap                         double precision      not null
    ,bext_is_cap_used                 bit                   not null
    ,bext_floor                       double precision      not null
    ,bext_is_floor_used               bit                   not null
    ,bext_adjustment_e                double precision      not null
    ,bext_adjustment_f                double precision      not null
    ,constraint fox_bext_pk           primary key (bext_id)
    ,constraint fox_bext_esech_id_fk  foreign key (bext_parent_esech_id) references h_equity_security (esech_id)
    ,constraint fox_bext_esec_id_fk   foreign key (bext_parent_esec_id) references equity_security (esec_id)
);

/*==============================================================
Table: simple_equity_payoff_sched
==============================================================*/
create table simple_equity_payoff_sched (
     seps_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,seps_parent_esec_id              bigint                    null
    ,seps_parent_esech_id             bigint                    null
    ,seps_grwb_payoff_id              bigint                    null
    ,seps_grwb_rebate_id              bigint                    null
    ,seps_payoff_point                double precision      not null
    ,seps_payoff_value                double precision      not null
    ,seps_list_index                  integer   default 0       null
    ,constraint fox_seps_pk                primary key (seps_id)
    ,constraint fox_seps_esech_id_fk       foreign key (seps_parent_esech_id) references h_equity_security (esech_id)
    ,constraint fox_seps_grwb_rebate_id_fk foreign key (seps_grwb_rebate_id) references grbw_barrier (grwb_id)
    ,constraint fox_seps_grwb_payoff_id_fk foreign key (seps_grwb_payoff_id) references grbw_barrier (grwb_id)
    ,constraint fox_psch_esec_id_fk        foreign key (seps_parent_esec_id) references equity_security (esec_id)
);

create index if not exists fox_seps_esec_list_index on simple_equity_payoff_sched (
seps_parent_esec_id,
seps_list_index
);

create index if not exists fox_seps_esech_list_index on simple_equity_payoff_sched (
seps_parent_esech_id,
seps_list_index
);

/*==============================================================
Table: snapshot_data
==============================================================*/
create table snapshot_data (
     snpd_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,snpd_pricingcontext_pcxth_id     bigint            not null
    ,snpd_fxtermvol_fxtvh_id          bigint            not null
    ,snpd_created_at                  timestamp         not null
    ,snpd_created_by                  varchar(20)       not null
    ,constraint fox_snpd_pk           primary key (snpd_id)
    ,constraint fox_snpd_pcxth_id_fk  foreign key (snpd_pricingcontext_pcxth_id) references h_pricing_context (pcxth_id)
    ,constraint fox_snpd_fxtvh_id_fk  foreign key (snpd_fxtermvol_fxtvh_id) references h_fx_termvol (fxtvh_id)
);

/*==============================================================
Table: snapshot_dividend_curve
==============================================================*/
create table snapshot_dividend_curve (
     snpdc_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,snpdc_snapshot_snpd_id           bigint            not null
    ,snpdc_dividendcurve_dvdch_id     bigint            not null
    ,constraint fox_snpdc_pk          primary key (snpdc_id)
    ,constraint fox_snpdc_snpd_id_fk  foreign key (snpdc_snapshot_snpd_id)  references snapshot_data (snpd_id)
    ,constraint fox_snpdc_dvdch_id_fk foreign key (snpdc_dividendcurve_dvdch_id) references h_dividend_curve (dvdch_id)
);

/*==============================================================
Table: snapshot_equity_vol_curve
==============================================================*/
create table snapshot_equity_vol_curve (
     snpec_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,snpec_snapshot_snpd_id           bigint            not null
    ,snpec_equityvolcurve_eqvch_id    bigint            not null
    ,constraint fox_snpec_pk          primary key (snpec_id)
    ,constraint fox_snpec_snpd_id_fk  foreign key (snpec_snapshot_snpd_id) references snapshot_data (snpd_id)
    ,constraint fox_snpec_eqvch_id_fk foreign key (snpec_equityvolcurve_eqvch_id)  references h_equity_vol_curve (eqvch_id)
);

/*==============================================================
Table: snapshot_holiday_calender
==============================================================*/
create table snapshot_holiday_calendar (
     snphc_id                         bigint            generated by default as identity (start with 1, increment by 1)
    ,snphc_snapshot_snpd_id           bigint            not null
    ,snphc_holidaycalendar_hocah_id   bigint            not null
    ,constraint fox_snphc_pk          primary key (snphc_id)
    ,constraint fox_snphc_snpd_id_fk  foreign key (snphc_snapshot_snpd_id) references snapshot_data (snpd_id)
    ,constraint fox_snphc_hocah_id_fk foreign key (snphc_holidaycalendar_hocah_id) references h_holiday_calendar (hocah_id)
);

/*==============================================================
Table: snapshot_portfolio
==============================================================*/
create table snapshot_portfolio (
     snpp_id                          bigint           generated by default as identity (start with 1, increment by 1)
    ,snpp_portfolio_impsh_id          bigint           not null
    ,snpp_snapshot_snpd_id            bigint           not null
    ,constraint fox_snpp_pk           primary key (snpp_id)
    ,constraint fox_snpp_snpd_id_fk   foreign key (snpp_snapshot_snpd_id) references snapshot_data (snpd_id)
    ,constraint fox_snpp_impsh_id_fk  foreign key (snpp_portfolio_impsh_id) references h_portfolio (impsh_id)
);

/*==============================================================
Table: snapshot_holding
==============================================================*/
create table snapshot_holding (
     snph_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,snph_snapshotportfolio_snpp_id   bigint            not null
    ,snph_equity_esech_id             bigint                null
    ,snph_waehrung_currh_id           bigint                null
    ,snph_account                     varchar(30)       not null
    ,snph_customer                    varchar(30)       not null
    ,snph_group                       varchar(30)       not null
    ,snph_quantity                    decimal(12,2)     not null
    ,snph_trader                      varchar(30)       not null
    ,snph_type                        varchar(30)       not null
    ,snph_required_security           varchar(30)       not null
    ,snph_average_cost                double precision  not null
    ,snph_day_realized                double precision  not null
    ,snph_day_int_income              double precision  not null
    ,snph_unrealized_adj              double precision  not null
    ,snph_mpandl                      double precision      null
    ,snph_ypandl                      double precision      null
    ,snph_holding_id                  integer           default 0 not null
    ,snph_currency_iso_code           char(03)          not null
    ,constraint fox_snph_pk           primary key (snph_id)
    ,constraint fox_snph_snpp_id_fk   foreign key (snph_snapshotportfolio_snpp_id) references snapshot_portfolio (snpp_id)
    ,constraint fox_snph_esech_id_fk  foreign key (snph_equity_esech_id) references h_equity_security (esech_id)
    ,constraint fox_snph_currh_id_fk  foreign key (snph_waehrung_currh_id) references h_currency (currh_id)
);

/*==============================================================
Table: snapshot_tick
==============================================================*/
create table snapshot_tick (
     snpt_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,snpt_snapshot_snpd_id            bigint            not null
    ,snpt_spot                        double precision  not null
    ,snpt_required_underlying         varchar(30)           null
    ,constraint fox_snpt_pk           primary key (snpt_id)
    ,constraint fox_snpt_snpd_id_fk   foreign key (snpt_snapshot_snpd_id) references snapshot_data (snpd_id)
);

/*==============================================================
Table: snapshot_yield_curve
==============================================================*/
create table snapshot_yield_curve (
     snpy_id                          bigint                generated by default as identity (start with 1, increment by 1)
    ,snpy_snapshot_snpd_id            bigint                not null
    ,snpy_waehrung_currh_id           bigint                not null
    ,snpy_interest_rate               double precision      not null
    ,snpy_interest_date               date                  not null
    ,snpy_list_index                  integer   default 0       null
    ,constraint fox_snpy_pk           primary key (snpy_id)
    ,constraint fox_snpy_snpd_id_fk   foreign key (snpy_snapshot_snpd_id) references snapshot_data (snpd_id)
    ,constraint fox_snpy_currh_id_fk  foreign key (snpy_waehrung_currh_id) references h_currency (currh_id)
);

create index if not exists fox_snpy_snpd_list_index on snapshot_yield_curve (
snpy_snapshot_snpd_id,
snpy_list_index
);

/*==============================================================
Table: snapshot_crossrate
==============================================================*/
create table snapshot_crossrate (
     snpc_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,snpc_snapshot_snpd_id            bigint            not null
    ,snpc_spot_price                  double precision  not null
    ,snpc_required_underlying         varchar(30)           null
    ,constraint fox_snpc_pk           primary key (snpc_id)
    ,constraint fox_snpc_snpd_id_fk   foreign key (snpc_snapshot_snpd_id) references snapshot_data (snpd_id)
);

/*==============================================================
Table: snapshot_context
==============================================================*/
create table snapshot_context (
     snpx_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,snpx_snapshot_snpd_id            bigint            not null
    ,snpx_security_esech_id           bigint            not null
    ,constraint fox_snpx_pk           primary key (snpx_id)
    ,constraint ref_snpx_snpd_id_fk   foreign key (snpx_snapshot_snpd_id) references snapshot_data (snpd_id)
    ,constraint ref_snpx_esech_id_fk  foreign key (snpx_security_esech_id) references h_equity_security (esech_id)
);

/*==============================================================
Table: end_of_day_price
==============================================================*/
create table end_of_day_price (
     eodp_id                          bigint            generated by default as identity (start with 1, increment by 1)
    ,eodp_snapshot_snpd_id            bigint            not null
    ,eodp_previous_mark               double precision  not null
    ,eodp_date                        date              not null
    ,eodp_security                    varchar(30)       not null
    ,eodp_mkt                         double precision  not null
    ,constraint fox_eodp_pk           primary key (eodp_id)
    ,constraint fox_eodp_snpd_id_fk   foreign key (eodp_snapshot_snpd_id) references snapshot_data (snpd_id)
);

/*==============================================================
Granting privileges
==============================================================*/
grant select on application_config to public;
grant select on h_application_config to public;
grant select on currency to public;
grant select on h_currency to public;
grant select on symbol_mapping to public;
grant select on h_symbol_mapping to public;
grant select on underlying_data to public;
grant select on h_underlying_data to public;
grant select on portfolio to public;
grant select on h_portfolio to public;
grant select on model_config to public;
grant select on h_model_config to public;
grant select on model_config_property to public;
grant select on model_parameter to public;
grant select on pricing_context to public;
grant select on h_pricing_context to public;
grant select on pricing_context_property to public;
grant select on snapshot_trigger to public;
grant select on business_group to public;
grant select on h_business_group to public;
grant select on business_group_right to public;
grant select on functional_group to public;
grant select on h_functional_group to public;
grant select on functional_group_right to public;
grant select on user_detail to public;
grant select on h_user_detail to public;
grant select on dividend_curve to public;
grant select on dividend_curve_detail to public;
grant select on h_dividend_curve to public;
grant select on equity_vol_curve to public;
grant select on equity_vol_curve_detail to public;
grant select on h_equity_vol_curve to public;
grant select on fx_termvol to public;
grant select on fx_termvol_detail to public;
grant select on h_fx_termvol to public;
grant select on equity_security to public;
grant select on average_correlation_override to public;
grant select on averaging_schedule to public;
grant select on api_combo_constituent to public;
grant select on basket_constituent to public;
grant select on basket_extension to public;
grant select on cbr_barrier_schedule to public;
grant select on dsc_barrier_schedule to public;
grant select on grbw_conversion to public;
grant select on grbw_monitoring_date to public;
grant select on grbw_mutation_vector to public;
grant select on rainbow_control to public;
grant select on simple_equity_payoff_sched to public;
grant select on grbw_barrier to public;
grant select on h_equity_security to public;
grant select on fx_security to public;
grant select on h_fx_security to public;
grant select on interest_security to public;
grant select on h_interest_security to public;
grant select on snapshot_data to public;
grant select on snapshot_holding to public;
grant select on snapshot_crossrate to public;
grant select on snapshot_tick to public;
grant select on snapshot_yield_curve to public;
grant select on snapshot_dividend_curve to public;
grant select on snapshot_equity_vol_curve to public;
grant select on end_of_day_price to public;
grant select on holiday_calendar to public;
grant select on holiday_calendar_detail to public;
grant select on h_holiday_calendar to public;
grant select on snapshot_holiday_calendar to public;
grant select on snapshot_context to public;

grant all on application_config to sa;
grant all on h_application_config to sa;
grant all on currency to sa;
grant all on h_currency to sa;
grant all on symbol_mapping to sa;
grant all on h_symbol_mapping to sa;
grant all on underlying_data to sa;
grant all on h_underlying_data to sa;
grant all on portfolio to sa;
grant all on h_portfolio to sa;
grant all on model_config to sa;
grant all on h_model_config to sa;
grant all on model_config_property to sa;
grant all on model_parameter to sa;
grant all on pricing_context to sa;
grant all on h_pricing_context to sa;
grant all on pricing_context_property to sa;
grant all on snapshot_trigger to sa;
grant all on business_group to sa;
grant all on h_business_group to sa;
grant all on business_group_right to sa;
grant all on functional_group_right to sa;
grant all on h_functional_group to sa;
grant all on functional_group_right to sa;
grant all on user_detail to sa;
grant all on h_user_detail to sa;
grant all on dividend_curve to sa;
grant all on dividend_curve_detail to sa;
grant all on h_dividend_curve to sa;
grant all on equity_vol_curve to sa;
grant all on equity_vol_curve_detail to sa;
grant all on h_equity_vol_curve to sa;
grant all on fx_termvol to sa;
grant all on fx_termvol_detail to sa;
grant all on h_fx_termvol to sa;
grant all on equity_security to sa;
grant all on average_correlation_override to sa;
grant all on averaging_schedule to sa;
grant all on api_combo_constituent to sa;
grant all on basket_constituent to sa;
grant all on basket_extension to sa;
grant all on cbr_barrier_schedule to sa;
grant all on dsc_barrier_schedule to sa;
grant all on grbw_conversion to sa;
grant all on grbw_monitoring_date to sa;
grant all on grbw_mutation_vector to sa;
grant all on rainbow_control to sa;
grant all on simple_equity_payoff_sched to sa;
grant all on grbw_barrier to sa;
grant all on h_equity_security to sa;
grant all on fx_security to sa;
grant all on h_fx_security to sa;
grant all on interest_security to sa;
grant all on h_interest_security to sa;
grant all on snapshot_data to sa;
grant all on snapshot_holding to sa;
grant all on snapshot_crossrate to sa;
grant all on snapshot_tick to sa;
grant all on snapshot_yield_curve to sa;
grant all on snapshot_dividend_curve to sa;
grant all on snapshot_equity_vol_curve to sa;
grant all on end_of_day_price to sa;
grant all on holiday_calendar to sa;
grant all on holiday_calendar_detail to sa;
grant all on h_holiday_calendar to public;
grant all on snapshot_holiday_calendar to sa;
grant all on snapshot_context to sa;

commit;
